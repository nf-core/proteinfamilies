nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"

    test("-profile test") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}',
                'seed_msa/raw/famsa_align/mgnifams_test/*.aln', 'seed_msa/raw/clipkit/mgnifams_test/*.clipkit',
                'seed_msa/filtered/mgnifams_test/*.clipkit', 'mmseqs/redundancy_clustering/mmseqs_createtsv/mgnifams_test/*.tsv',
                'hmm/raw/mgnifams_test/*.hmm.gz', 'hmm/filtered/mgnifams_test/*.hmm.gz',
                'full_msa/raw/hmmer_hmmalign/mgnifams_test/*.sto.gz', 'full_msa/filtered/famsa_align/mgnifams_test/*.aln',
                'fasta/non_redundant_sequences_filtered/mgnifams_test/*.faa'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            // paths to check for sizes
            def hmm_path             = "/hmm/filtered/mgnifams_test"
            def stable_hmm_size      = getAllFilesFromDir(params.outdir + hmm_path, ignoreFile: 'tests/.nftignore')
            def seed_msa_path        = "/seed_msa/filtered/mgnifams_test"
            def stable_seed_msa_size = getAllFilesFromDir(params.outdir + seed_msa_path, ignoreFile: 'tests/.nftignore')
            def full_msa_path        = "/full_msa/filtered/famsa_align/mgnifams_test"
            def stable_full_msa_size = getAllFilesFromDir(params.outdir + full_msa_path, ignoreFile: 'tests/.nftignore')
            def fasta_path           = "/fasta/non_redundant_sequences_filtered/mgnifams_test"
            def stable_fasta_size    = getAllFilesFromDir(params.outdir + fasta_path, ignoreFile: 'tests/.nftignore')

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nf_core_proteinfamilies_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // All files with stable contents
                    stable_path,
                    // Rest of the folders, counting result files because names can be mixed
                    hmm_path      + ": " + stable_hmm_size.size(),
                    seed_msa_path + ": " + stable_seed_msa_size.size(),
                    full_msa_path + ": " + stable_full_msa_size.size(),
                    fasta_path    + ": " + stable_fasta_size.size()
                ).match() }
            )
        }
    }
}
