nextflow_process {

    name "Test Process EXTRACT_FAMILY_REPS"
    script "../main.nf"
    process "EXTRACT_FAMILY_REPS"

    test("proteinfamilies - aln") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'extract_family_reps' ],
                    [
                        file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_1.aln', checkIfExists: true),
                        file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_2.aln', checkIfExists: true)
                    ]
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.fasta[0][1]).name,
                    path(process.out.fasta[0][1]).readLines().size(),
                    file(process.out.map[0][1]).name,
                    path(process.out.map[0][1]).readLines().size(),
                    process.out.versions.collect { path(it).yaml }
                    ).match()}
            )
        }
    }

    test("proteinfamilies - aln - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'extract_family_reps' ],
                    [
                        file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_1.aln', checkIfExists: true),
                        file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_2.aln', checkIfExists: true)
                    ]
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
