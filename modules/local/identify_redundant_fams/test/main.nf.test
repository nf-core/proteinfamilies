nextflow_process {

    name "Test Process IDENTIFY_REDUNDANT_FAMS"
    script "../main.nf"
    process "IDENTIFY_REDUNDANT_FAMS"

    test("proteinfamilies - family redundancy") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'mqc' ],
                    file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_meta_mqc.csv', checkIfExists: true),
                ])
                input[1] = Channel.of([
                    [ id: 'domtbl' ],
                    file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test.domtbl.gz', checkIfExists: true),
                ])
                input[2] = 0.9
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.redundant_ids,
                    process.out.versions.collect { path(it).yaml }
                    ).match()}
            )
        }
    }

    test("proteinfamilies - family redundancy - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'mqc' ],
                    file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test_meta_mqc.csv', checkIfExists: true),
                ])
                input[1] = Channel.of([
                    [ id: 'domtbl' ],
                    file(params.pipelines_testdata_base_path + 'test_data/modules/mgnifams_test.domtbl.gz', checkIfExists: true),
                ])
                input[2] = 0.9
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
